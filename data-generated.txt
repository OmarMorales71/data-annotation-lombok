package academy.omar.dataannotation.model;

public class Person {
    private String firstName;
    private String lastName;
    private Integer age;
    private Integer height;
    private Double weight;

    public Person() {
    }

    public String getFirstName() {
        return this.firstName;
    }

    public String getLastName() {
        return this.lastName;
    }

    public Integer getAge() {
        return this.age;
    }

    public Integer getHeight() {
        return this.height;
    }

    public Double getWeight() {
        return this.weight;
    }

    public void setFirstName(final String firstName) {
        this.firstName = firstName;
    }

    public void setLastName(final String lastName) {
        this.lastName = lastName;
    }

    public void setAge(final Integer age) {
        this.age = age;
    }

    public void setHeight(final Integer height) {
        this.height = height;
    }

    public void setWeight(final Double weight) {
        this.weight = weight;
    }

    public boolean equals(final Object o) {
        if (o == this) {
            return true;
        } else if (!(o instanceof Person)) {
            return false;
        } else {
            Person other = (Person)o;
            if (!other.canEqual(this)) {
                return false;
            } else {
                label71: {
                    Object this$age = this.getAge();
                    Object other$age = other.getAge();
                    if (this$age == null) {
                        if (other$age == null) {
                            break label71;
                        }
                    } else if (this$age.equals(other$age)) {
                        break label71;
                    }

                    return false;
                }

                Object this$height = this.getHeight();
                Object other$height = other.getHeight();
                if (this$height == null) {
                    if (other$height != null) {
                        return false;
                    }
                } else if (!this$height.equals(other$height)) {
                    return false;
                }

                label57: {
                    Object this$weight = this.getWeight();
                    Object other$weight = other.getWeight();
                    if (this$weight == null) {
                        if (other$weight == null) {
                            break label57;
                        }
                    } else if (this$weight.equals(other$weight)) {
                        break label57;
                    }

                    return false;
                }

                Object this$firstName = this.getFirstName();
                Object other$firstName = other.getFirstName();
                if (this$firstName == null) {
                    if (other$firstName != null) {
                        return false;
                    }
                } else if (!this$firstName.equals(other$firstName)) {
                    return false;
                }

                Object this$lastName = this.getLastName();
                Object other$lastName = other.getLastName();
                if (this$lastName == null) {
                    if (other$lastName == null) {
                        return true;
                    }
                } else if (this$lastName.equals(other$lastName)) {
                    return true;
                }

                return false;
            }
        }
    }

    protected boolean canEqual(final Object other) {
        return other instanceof Person;
    }

    public int hashCode() {
        int PRIME = true;
        int result = 1;
        Object $age = this.getAge();
        int result = result * 59 + ($age == null ? 43 : $age.hashCode());
        Object $height = this.getHeight();
        result = result * 59 + ($height == null ? 43 : $height.hashCode());
        Object $weight = this.getWeight();
        result = result * 59 + ($weight == null ? 43 : $weight.hashCode());
        Object $firstName = this.getFirstName();
        result = result * 59 + ($firstName == null ? 43 : $firstName.hashCode());
        Object $lastName = this.getLastName();
        result = result * 59 + ($lastName == null ? 43 : $lastName.hashCode());
        return result;
    }

    public String toString() {
        String var10000 = this.getFirstName();
        return "Person(firstName=" + var10000 + ", lastName=" + this.getLastName() + ", age=" + this.getAge() + ", height=" + this.getHeight() + ", weight=" + this.getWeight() + ")";
    }
}
